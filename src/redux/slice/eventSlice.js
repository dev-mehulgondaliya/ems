// src/features/eventSlice.js
import { createSlice } from '@reduxjs/toolkit';
import { commonApiCall, createExtraReducer } from '../../utils/helper';

// Define the initial state for the event feature
const initialState = {
    data: [],    // Holds the list of events
    status: "idle", // Tracks loading, success, or failure state
    error: null,    // Stores any error from the API
    response: null
};

// Async actions for CRUD operations on events
export const getEventList = commonApiCall('event/eventList', 'getEventList'); // API call to get event list
export const createEvent = commonApiCall('event/createEvent', 'createEvent'); // API call to create an event
export const updateEvent = commonApiCall('event/updateEvent', 'updateEvent'); // API call to update an event
export const deleteEvent = commonApiCall('event/deleteEvent', 'deleteEvent'); // API call to delete an event

// Create the event slice
const eventSlice = createSlice({
    name: 'eventSlice',
    initialState,
    reducers: {
        // Set the event list data
        setEventData(state, action) {
            state.data = action.payload;
        },
        // Clear the event list and reset state
        clearEventList(state) {
            state = initialState
        },
    },
    extraReducers: (builder) => {
        // Handle API calls for fetching events list
        createExtraReducer(builder, getEventList);
        
        // Handle API calls for creating an event
        createExtraReducer(builder, createEvent);

        // Handle API calls for updating an event
        createExtraReducer(builder, updateEvent);

        // Handle API calls for deleting an event
        createExtraReducer(builder, deleteEvent);
    },
});

// Export the actions generated by the slice
export const { setEventData, clearEventList } = eventSlice.actions;

// Export the reducer to be included in the store
export default eventSlice.reducer;
